/*
Project Euler

Even Fibonacci numbers
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

*/
package main

func evenFibonacciSum(n int) {
	if n == 0 {
		println(0, " ")
	}
	var a, b int64
	a, b = 0, 1
	var sEven int64
	sEven = 0
	for i := 1; i < n; i++ {
		if b <= 4000000 {
			a, b = b, a+b
			println(b, " ")
			if b%2 == 0 {
				sEven += b
			}
		} else {
			break
		}
	}
	println("Sum of Even Fibonacci terms: ", sEven)
}
